// Script pour ajouter les colonnes manquantes √† la table diligences
import { getDatabase } from './src/database/db.js';

async function addMissingColumns() {
  try {
    const database = await getDatabase();
    
    console.log('üîß Ajout des colonnes manquantes √† la table diligences...');
    
    // Ajouter la colonne archived si elle n'existe pas
    try {
      await database.run('ALTER TABLE diligences ADD COLUMN archived BOOLEAN DEFAULT 0');
      console.log('‚úÖ Colonne "archived" ajout√©e avec succ√®s');
    } catch (error) {
      if (error.message.includes('duplicate column name')) {
        console.log('‚ÑπÔ∏è Colonne "archived" existe d√©j√†');
      } else {
        throw error;
      }
    }
    
    // Ajouter la colonne archived_at si elle n'existe pas
    try {
      await database.run('ALTER TABLE diligences ADD COLUMN archived_at DATETIME');
      console.log('‚úÖ Colonne "archived_at" ajout√©e avec succ√®s');
    } catch (error) {
      if (error.message.includes('duplicate column name')) {
        console.log('‚ÑπÔ∏è Colonne "archived_at" existe d√©j√†');
      } else {
        throw error;
      }
    }
    
    console.log('‚úÖ Mise √† jour de la structure de la base de donn√©es termin√©e');
    
    // V√©rifier la nouvelle structure
    const columns = await database.all('PRAGMA table_info(diligences)');
    console.log('\nüîç Nouvelle structure de la table diligences:');
    columns.forEach(col => {
      console.log(`   - ${col.name} (${col.type})`);
    });
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'ajout des colonnes:', error);
  }
}

addMissingColumns();