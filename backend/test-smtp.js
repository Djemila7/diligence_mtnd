const nodemailer = require('nodemailer');

// Configuration de test SMTP
const testConfig = {
  host: 'smtp.gmail.com',
  port: 587,
  secure: true, // true pour 465, false pour les autres ports
  auth: {
    user: 'your-real-email@gmail.com', // Remplacez par votre email r√©el
    pass: 'your-real-app-password'     // Remplacez par votre mot de passe d'application
  }
};

async function testSMTPConnection() {
  console.log('üß™ Test de connexion SMTP...');
  console.log('Configuration:', testConfig);

  try {
    // Cr√©er un transporteur
    const transporter = nodemailer.createTransport(testConfig);

    // Tester la connexion
    console.log('üîó Test de connexion en cours...');
    await transporter.verify();
    console.log('‚úÖ Connexion SMTP r√©ussie !');

    // Tester l'envoi d'un email
    console.log('üìß Test d\'envoi d\'email en cours...');
    const info = await transporter.sendMail({
      from: '"Test System" <your-real-email@gmail.com>',
      to: 'test@example.com',
      subject: 'Test SMTP Connection',
      text: 'Ceci est un email de test pour v√©rifier la connexion SMTP.',
      html: '<p>Ceci est un email de test pour v√©rifier la connexion SMTP.</p>'
    });

    console.log('‚úÖ Email envoy√© avec succ√®s !');
    console.log('Message ID:', info.messageId);

  } catch (error) {
    console.error('‚ùå Erreur de connexion SMTP:');
    console.error('Message:', error.message);
    console.error('Code:', error.code);
    console.error('Stack:', error.stack);
    
    // Informations d√©taill√©es pour le d√©bogage
    if (error.code === 'EAUTH') {
      console.log('üîç Probl√®me d\'authentification - v√©rifiez email/mot de passe');
    } else if (error.code === 'ECONNECTION') {
      console.log('üîç Probl√®me de connexion - v√©rifiez host/port');
    } else if (error.code === 'ETIMEDOUT') {
      console.log('üîç Timeout - le serveur ne r√©pond pas');
    }
  }
}

testSMTPConnection();