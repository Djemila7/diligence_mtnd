import { getDatabase } from './backend/src/database/db.js';

async function checkDatabase() {
  try {
    const db = await getDatabase();
    
    // V√©rifier si la table smtp_config existe
    const tables = await db.all(`
      SELECT name FROM sqlite_master 
      WHERE type='table' AND name='smtp_config'
    `);
    
    console.log('üìä Tables dans la base de donn√©es:');
    const allTables = await db.all("SELECT name FROM sqlite_master WHERE type='table'");
    console.log(allTables.map(t => t.name).join(', '));
    
    if (tables.length > 0) {
      console.log('‚úÖ Table smtp_config existe');
      
      // V√©rifier le contenu de la table
      const configs = await db.all('SELECT * FROM smtp_config');
      console.log('üìã Contenu de la table smtp_config:');
      console.log(configs);
      
      // V√©rifier la structure de la table
      const columns = await db.all('PRAGMA table_info(smtp_config)');
      console.log('üèóÔ∏è Structure de la table smtp_config:');
      console.log(columns);
    } else {
      console.log('‚ùå Table smtp_config n\'existe pas');
      
      // V√©rifier si le sch√©ma a √©t√© ex√©cut√©
      const schemaCheck = await db.all(`
        SELECT name FROM sqlite_master 
        WHERE type='table' AND name IN ('users', 'diligences')
      `);
      
      if (schemaCheck.length >= 2) {
        console.log('‚ö†Ô∏è Le sch√©ma a √©t√© ex√©cut√© mais smtp_config manque');
      } else {
        console.log('‚ö†Ô∏è Le sch√©ma n\'a pas √©t√© ex√©cut√© correctement');
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification de la base de donn√©es:', error);
  }
}

checkDatabase();